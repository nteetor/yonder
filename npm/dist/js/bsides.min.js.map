{"version":3,"names":["boundInputs","Map","BoundInputs","set","element","key","instance","has","store","get","size","console","log","remove","delete","Input","BINDING_KEY","this","NAME","EVENT_KEY","EVENTS","SELECTOR","constructor","_element","_value","_debounce","_callback","debounce","value","x","content","dispose","find","scope","$","getId","id","getType","getValue","input","subscribe","callback","unsubscribe","receiveMessage","data","forEach","msg","method","args","getState","getRatePolicy","initialize","ShinyInterface","ButtonInput","super","text","innerHTML","on","event","document","button","currentTarget","Shiny","inputBindings","register"],"sources":["../../js/bound-inputs.js","../../js/input.js","../../js/button.js","../../js/bsides.js"],"sourcesContent":["const boundInputs = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!boundInputs.has(element)) {\n      boundInputs.set(element, new Map())\n    }\n\n    const store = boundInputs.get(element)\n\n    if (!store.has(key) && store.size !== 0) {\n      return\n    }\n\n    store.set(key, instance)\n\n    console.log(boundInputs)\n  },\n  get(element, key) {\n    if (boundInputs.has(element)) {\n      return boundInputs.get(element).get(key) || null\n    }\n\n    return null\n  },\n  remove(element, key) {\n    if (!boundInputs.has(element)) {\n      return\n    }\n\n    const store = boundInputs.get(element)\n\n    store.delete(key)\n\n    if (store.size === 0) {\n      boundInputs.delete(element)\n    }\n  }\n}","import $ from 'jquery'\nimport BoundInputs from './bound-inputs.js'\n\nclass Input {\n  // getters\n\n  static get BINDING_KEY() {\n    return `bsides.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.BINDING_KEY}`\n  }\n\n  static get EVENTS() {\n    return null\n  }\n\n  static get SELECTOR() {\n    return `.bsides-${this.NAME}`\n  }\n\n  // public\n\n  constructor(element) {\n    this._element = element\n    this._value = null\n    this._debounce = false\n    this._callback = (debounce) => {}\n\n    BoundInputs.set(element, this.constructor.BINDING_KEY, this)\n  }\n\n  value(x) {\n    return null\n  }\n\n  content(x) {\n    return null\n  }\n\n  dispose() {\n    this._callback = () => {}\n    BoundInputs.remove(element, this.constructor.BINDING_KEY)\n  }\n\n  // static\n\n  static find(scope) {\n    return $(scope).find(this.SELECTOR)\n  }\n\n  static getId(element) {\n    return element.id\n  }\n\n  static getType(element) {\n    return null\n    element // unused\n  }\n\n  static getValue(element) {\n    let input = BoundInputs.get(element, this.BINDING_KEY)\n\n    if (!input) {\n      return null\n    }\n\n    return input.value()\n  }\n\n  static subscribe(element, callback) {\n    let input = BoundInputs.get(element, this.BINDING_KEY)\n\n    if (!input) {\n      return\n    }\n\n    console.log(input)\n\n    input._callback = callback\n\n    console.log(input._callback)\n  }\n\n  static unsubscribe(element) {\n    let input = BoundInputs.get(element, this.BINDING_KEY)\n\n    if (!input) {\n      return\n    }\n\n    input.dispose()\n  }\n\n  static receiveMessage(element, data) {\n    let input = BoundInputs.get(element, this.BINDING_KEY)\n\n    if (!input) {\n      return\n    }\n\n    data.forEach((msg) => {\n      let [method, args = []] = msg\n\n      input[method](...args)\n    })\n  }\n\n  static getState(element) {\n    let input = BoundInputs.get(element, this.BINDING_KEY)\n\n    if (!input) {\n      return\n    }\n\n    return { value: input.value() }\n  }\n\n  // @return { policy: RatePolicyModes, delay: number }\n  static getRatePolicy(element) {\n    return null\n    element // unused\n  }\n\n  static initialize(element) {\n    element // unused\n  }\n\n  static dispose(element) {\n    let input = BoundInputs.get(element, this.BINDING_KEY)\n\n    if (!input) {\n      return\n    }\n\n    input.dispose()\n  }\n\n  static ShinyInterface() {\n    /*return {\n      find: this.find,\n      getId: this.getId,\n      getType: this.getType,\n      getValue: this.getValue,\n      subscribe: this.subscribe,\n      unsubscribe: this.unsubscribe,\n      receiveMessage: this.receiveMessage,\n      getState: this.getState,\n      getRatePolicy: this.getRatePolicy,\n      initialize: this.initialize,\n      dispose: this.dispose\n    }*/\n    return this\n  }\n}\n\nexport default Input\n","import $ from 'jquery'\nimport Input from './input.js'\nimport BoundInputs from './bound-inputs.js'\n\nclass ButtonInput extends Input {\n  static get NAME() {\n    return 'button'\n  }\n\n  static get EVENTS() {\n    return `click${this.EVENT_KEY}`\n  }\n\n  constructor(element) {\n    super(element)\n\n    this._value = 0\n  }\n\n  value(x) {\n    if (typeof x === 'undefined') {\n      return this._value\n    }\n\n    this._value = x\n    this._callback(this._debounce)\n\n    return this\n  }\n\n  content(text) {\n    this._element.innerHTML = text\n\n    return this\n  }\n\n  static initialize(element) {\n    let input = BoundInputs.get(element, this.BINDING_KEY)\n\n    if (!input) {\n      input = new ButtonInput(element)\n    }\n  }\n\n  static subscribe(element, callback) {\n    $(element).on(\"click\", (event) => {\n      callback()\n    })\n  }\n}\n\n$(document).on(ButtonInput.EVENTS, ButtonInput.SELECTOR, (event) => {\n  let button = BoundInputs.get(event.currentTarget, ButtonInput.BINDING_KEY)\n\n  if (!button) {\n    return\n  }\n\n  button.value(button.value() + 1)\n})\n\nif (Shiny) {\n  Shiny.inputBindings.register(ButtonInput.ShinyInterface())\n}\n\nexport default ButtonInput\n","import Input from './input.js'\nimport ButtonInput from './button.js'\n\nexport default {\n  Input,\n  ButtonInput\n}\n"],"mappings":"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","ignoreList":[]}