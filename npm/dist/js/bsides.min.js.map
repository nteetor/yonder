{"version":3,"names":["inputStore","Map","InputStore","set","element","key","instance","has","instanceStore","get","size","remove","store","delete","Input","type","this","name","namespace","events","selector","value","debounce","callback","constructor","x","label","f","dispose","find","scope","$","getId","id","getType","getValue","input","subscribe","unsubscribe","receiveMessage","data","Object","entries","disable","getState","getRatePolicy","initialize","ShinyInterface","ButtonInput","super","innerHTML","setAttribute","removeAttribute","document","on","event","button","currentTarget","Shiny","inputBindings","register","LinkInput","link"],"sources":["../../js/utils/input-store.js","../../js/inputs/input.js","../../js/inputs/button.js","../../js/inputs/link.js","../../js/bsides.js"],"sourcesContent":["const inputStore = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!inputStore.has(element)) {\n      inputStore.set(element, new Map())\n    }\n\n    const instanceStore = inputStore.get(element)\n\n    if (!instanceStore.has(key) && instanceStore.size !== 0) {\n      return\n    }\n\n    instanceStore.set(key, instance)\n  },\n  get(element, key) {\n    if (inputStore.has(element)) {\n      return inputStore.get(element).get(key) || null\n    }\n\n    return null\n  },\n  remove(element, key) {\n    if (!inputStore.has(element)) {\n      return\n    }\n\n    const store = inputStore.get(element)\n\n    store.delete(key)\n\n    if (store.size === 0) {\n      inputStore.delete(element)\n    }\n  }\n}","import $ from 'jquery'\n\nimport InputStore from '../utils/input-store.js'\n\nclass Input {\n  static get type() {\n    return `bsides.${this.name}`\n  }\n\n  static get namespace() {\n    return `.${this.type}`\n  }\n\n  static get events() {\n    return null\n  }\n\n  static get selector() {\n    return `.bsides-${this.name}`\n  }\n\n  #value = null\n  #debounce = false\n  #callback = (debounce) => {}\n  #element = null\n\n  constructor(element) {\n    this.#element = element\n\n    InputStore.set(element, this.constructor.type, this)\n  }\n\n  get value() {\n    return this.#value\n  }\n\n  set value(x) {\n    this.#value = x\n    this.#callback(this.#debounce)\n  }\n\n  // garbo arg name\n  set label(x) {\n    throw \"not implemented\"\n  }\n\n  get label() {\n    return null\n  }\n\n  get callback() {\n    return this.#callback\n  }\n\n  set callback(f) {\n    this.#callback = f\n  }\n\n  get element() {\n    return this.#element\n  }\n\n  dispose() {\n    this.#callback = (debounce) => {}\n    this.#value = null\n    InputStore.remove(element, this.constructor.type)\n  }\n\n  // static\n\n  static find(scope) {\n    return $(scope).find(this.selector)\n  }\n\n  static getId(element) {\n    return element.id\n  }\n\n  static getType(element) {\n    return null\n    element // unused\n  }\n\n  static getValue(element) {\n    let input = InputStore.get(element, this.type)\n\n    if (!input) {\n      return null\n    }\n\n    return input.value\n  }\n\n  static subscribe(element, callback) {\n    let input = InputStore.get(element, this.type)\n\n    if (!input) {\n      return\n    }\n\n    input.callback = callback\n  }\n\n  static unsubscribe(element) {\n    let input = InputStore.get(element, this.type)\n\n    if (!input) {\n      return\n    }\n\n    input.dispose()\n  }\n\n  static receiveMessage(element, data) {\n    let input = InputStore.get(element, this.type)\n\n    if (!input) {\n      return\n    }\n\n    for (const [key, value] of Object.entries(data)) {\n      if (key === 'value') {\n        // nothing confusing here\n        input.value = value\n      } else if (key === 'label') {\n        input.label = value\n      } else if (key === 'disable') {\n        input.disable(value)\n      }\n    }\n  }\n\n  static getState(element) {\n    let input = InputStore.get(element, this.type)\n\n    if (!input) {\n      return\n    }\n\n    return { value: input.value }\n  }\n\n  // @return { policy: RatePolicyModes, delay: number }\n  static getRatePolicy(element) {\n    return null\n    element // unused\n  }\n\n  static initialize(element) {\n    let input = InputStore.get(element, this.type)\n\n    if (!input) {\n      input = new this(element)\n    }\n  }\n\n  static dispose(element) {\n    let input = InputStore.get(element, this.type)\n\n    if (!input) {\n      return\n    }\n\n    input.dispose()\n  }\n\n  static ShinyInterface() {\n    return this\n  }\n}\n\nexport default Input\n","import $ from 'jquery'\n\nimport InputStore from '../utils/input-store.js'\nimport Input from './input.js'\n\nclass ButtonInput extends Input {\n  static get name() {\n    return 'button'\n  }\n\n  static get events() {\n    return `click${this.namespace}`\n  }\n\n  constructor(element) {\n    super(element)\n\n    this.value = 0\n  }\n\n  set label(x) {\n    this.element.innerHTML = x\n  }\n\n  get label() {\n    this.element.innerHTML\n  }\n\n  // this argument name is garbo\n  disable(x) {\n    if (x === true) {\n      this.element.setAttribute('disabled', '')\n    } else {\n      this.element.removeAttribute('disabled')\n    }\n\n    return this\n  }\n}\n\n$(document).on(ButtonInput.events, ButtonInput.selector, (event) => {\n  let button = InputStore.get(event.currentTarget, ButtonInput.type)\n\n  if (!button) {\n    return\n  }\n\n  button.value++\n})\n\nif (Shiny) {\n  Shiny.inputBindings.register(ButtonInput.ShinyInterface())\n}\n\nexport default ButtonInput\n","import $ from 'jquery'\n\nimport Input from './input.js'\nimport InputStore from '../utils/input-store.js'\n\nclass LinkInput extends Input {\n  static get name() {\n    return 'link'\n  }\n\n  static get events() {\n    return `click.${this.namespace}`\n  }\n\n  constructor(element) {\n    super(element)\n\n    this.value = 0\n  }\n\n  set label(x) {\n    this.element.innerHTML = x\n  }\n\n  get label() {\n    this.element.innerHTML\n  }\n\n  disable(x) {\n    if (x === \"true\") {\n      this.element.setAttribute(\"disabled\", \"\")\n    } else {\n      this.element.removeAttribute(\"disabled\")\n    }\n  }\n}\n\n$(document).on(LinkInput.events, LinkInput.selector, (event) => {\n  let link = InputStore.get(event.currentTarget, LinkInput.type)\n\n  if (!link) {\n    return\n  }\n\n  link.value++\n})\n\nif (Shiny) {\n  Shiny.inputBindings.register(LinkInput.ShinyInterface())\n}\n\nexport default LinkInput\n","import ButtonInput from './inputs/button.js'\nimport LinkInput from './inputs/link.js'\n\nexport default {\n  ButtonInput,\n  LinkInput\n}\n"],"mappings":"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","ignoreList":[]}