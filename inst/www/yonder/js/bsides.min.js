/*!
  * bsides v0.2.0.9000 (https://nteetor.github.com/yonder)
  * Copyright 2011-2025 Nathan Teetor <nate@haufin.ch>
  * Licensed under MIT (https://github.com/nteetor/yonder/blob/main/LICENSE.note)
  */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).bsides=t(e.$)}(this,(function(e){"use strict";class t{static get type(){return`bsides.${this.name}`}static get namespace(){return`.${this.type}`}static get priority(){return"deferred"}static get events(){return[]}static find(t){return e(t).find(`.bsides-${this.name}`)}static getId(e){return e.id}static getType(e){return null}static getValue(e){throw"not implemented"}static subscribe(t,i){this.events.forEach((s=>{e(t).on(`${s}${this.namespace}`,(()=>{i(this.priority)}))}))}static unsubscribe(t){e(t).off(this.namespace)}static receiveMessage(e,t){throw"not implemented"}static getState(e){let t=InputStore.get(e,this.type);if(t)return{value:t.values()}}static getRatePolicy(e){return null}static initialize(e){}static dispose(e){}}class i extends t{static get name(){return"checkbox"}static get events(){return["change"]}static get selectors(){return{choice:".form-check-label",value:".form-check-input"}}static getType(e){return this.type}static getValue(t){let i=e(t).find(this.selectors.value).map(((e,t)=>[[t.value,t.checked]])).get();return Object.fromEntries(i)}static receiveMessage(t,i){const s=e(t);i.hasOwnProperty("choices")&&(s.find(".form-check").remove(),s.html(i.choices)),s.trigger("change")}}return Shiny&&Shiny.inputBindings.register(i),{CheckboxInput:i}}));
//# sourceMappingURL=bsides.min.js.map