/*!
  * bsides v0.2.0.9000 (https://nteetor.github.com/yonder)
  * Copyright 2011-2025 Nathan Teetor <nate@haufin.ch>
  * Licensed under MIT (https://github.com/nteetor/yonder/blob/main/LICENSE.note)
  */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).$)}(this,(function(e){"use strict";class t{static get prefix(){return"bsides"}static get type(){throw"not implemented"}static get namespace(){return`.${this.type}`}get events(){return[]}constructor(){this.priority="deferred"}find(t){return e(t).find(`.${this.constructor.prefix}-${this.constructor.type}`)}getId(e){return e.id}getType(e){return null}getValue(e){throw"not implemented"}subscribe(t,s){this.events.forEach((r=>{const c=`${r.type?r.type:r}${this.constructor.namespace}`,i=r.selector?r.selector:null;console.log(c),console.log(i),e(t).on(c,i,(e=>{s(this.priority)}))}))}unsubscribe(t){e(t).off(this.namespace)}receiveMessage(e,t){throw"not implemented"}getState(e){throw"not implemented"}getRatePolicy(e){return null}initialize(e){}dispose(e){}}class s extends t{static get type(){return"button"}get events(){return["click"]}get data(){return{clicks:`${this.constructor.prefix}-clicks`}}initialize(t){const s=e(t);s.data(this.data.clicks,0),s.on(`click${this.constructor.namespace}`,(e=>{const t=+s.data(this.data.clicks);s.data(this.data.clicks,t+1)}))}getType(e){return`${this.constructor.prefix}${this.constructor.namespace}`}getValue(t){return e(t).data(this.data.clicks)}receiveMessage(e,t){}}class r extends t{static get type(){return"checkbox"}get events(){return["change"]}get selectors(){return{choice:".form-check-label",value:".form-check-input"}}getType(e){return`${this.constructor.prefix}${this.constructor.namespace}`}getValue(t){let s=e(t).find(this.selectors.value).map(((e,t)=>[[t.value,t.checked]])).get();return Object.fromEntries(s)}receiveMessage(t,s){const r=e(t),c=r.find(this.selectors.value);s.hasOwnProperty("options")&&(r.find(".form-check").remove(),r.html(s.options)),s.hasOwnProperty("select")&&(c.prop("checked",!1),c.filter(((e,t)=>s.select.includes(t.value))).prop("checked",!0)),s.hasOwnProperty("disable")&&(c.prop("disabled",!1),c.filter(((e,t)=>s.disable.includes(t.value))).prop("disabled",!0)),r.trigger("change")}}class c extends t{static get type(){return"checkboxbutton"}get events(){return["change"]}get selectors(){return{choice:".btn",value:".btn-check"}}getType(e){return console.log(this.constructor),`${this.constructor.prefix}${this.constructor.namespace}`}getValue(t){let s=e(t).find(this.selectors.value).map(((e,t)=>[[t.value,t.checked]])).get();return Object.fromEntries(s)}receiveMessage(t,s){const r=e(t),c=r.find(this.selectors.value);s.hasOwnProperty("options")&&(r.find(`${this.selectors.choice},${this.selectors.value}`).remove(),r.html(s.options)),s.hasOwnProperty("select")&&(c.prop("checked",!1),console.log(c),console.log(c.filter(((e,t)=>s.select.includes(t.value)))),c.filter(((e,t)=>s.select.includes(t.value))).prop("checked",!0)),s.hasOwnProperty("disable")&&(c.prop("disabled",!1),c.filter(((e,t)=>s.disable.includes(t.value))).prop("disabled",!0)),r.trigger("change")}}class i extends t{static get type(){return"form"}get events(){return[{event:"click",selector:this.selectors.submit}]}get selectors(){return{submit:".bsides-btn-submit"}}get data(){return{value:`${this.constructor.prefix}-value`}}initialize(t){const s=e(t);let r=new Map;s.on(`shiny:inputchanged${this.constructor.namespace}`,(e=>{if(e.el&&"event"!==e.priority&&t.contains(e.el)){const t=e.inputType?`${e.name}:${e.inputType}`:e.name;r.set(t,e.value),e.preventDefault()}})),s.on(`click${this.constructor.namespace}`,this.selectors.submit,(e=>{e.preventDefault();for(const[e,t]of r.entries())Shiny.setInputValue(e,t,{priority:"event"});const t=e.currentTarget.value;s.data(this.data.value,t)}))}getValue(t){return e(t).data(this.data.value)}receiveMessage(t,s){const r=e(t);if(s.hasOwnProperty("submit")){console.log(s);const e=s.submit;r.find(`${this.selectors.submit}[value=${e}]`).trigger("click")}}}class n extends t{static get type(){return"link"}get events(){return["click"]}get data(){return{clicks:`${this.constructor.prefix}-clicks`}}initialize(t){const s=e(t);s.data(this.data.clicks,0),s.on(`click${this.constructor.namespace}`,(e=>{const t=+s.data(this.data.clicks);s.data(this.data.clicks,t+1)}))}getType(e){return`${this.constructor.prefix}${this.constructor.namespace}`}getValue(t){return e(t).data(this.data.clicks)}}!function(){if(Shiny){const e=Shiny.inputBindings;e.register(new s,s.type),e.register(new r,r.type),e.register(new c,c.type),e.register(new i,i.type),e.register(new n,n.type)}}()}));
//# sourceMappingURL=bsides.min.js.map